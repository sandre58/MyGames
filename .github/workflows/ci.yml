# Copyright (c) St√©phane ANDRE.
# Licensed under the MIT license.

# This continuous integration pipeline is triggered anytime a user pushes code to main branch.
# This pipeline builds the solution and runs unit tests

name: Build

on:
  push:
      branches:
        - main
      paths:
        - .github/workflows/ci.yml
        - 'src/**'
  workflow_dispatch:

jobs:

  # Build
  build:
    runs-on: windows-latest
    name: Build all projects
    env:
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 8.0.201
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.201

      - name: Add NuGet Feed
        shell: pwsh
        run: |
          $userName = "${{ vars.PRIVATE_NUGET_API_USERNAME }}"
          $token = "${{ secrets.PRIVATE_NUGET_API_KEY }}"
          if ($userName -eq '' || $token -eq '') {
            dotnet nuget add source ${{ vars.PRIVATE_NUGET_API_SOURCE }} -n NuGetFeed
          } else {
            dotnet nuget add source ${{ vars.PRIVATE_NUGET_API_SOURCE }} -u $userName -p $token -n NuGetFeed
          }

      - name: NuGet Restore
        run: dotnet restore .\src\MyGames.sln

      - name: Build Packages
        run: dotnet build .\src\MyGames.sln -c Release

      - name: Run Tests
        run: dotnet test .\src\MyGames.sln --configuration Release --logger GitHubActions --no-build --no-restore --blame-crash --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover --no-build

      - name: Upload Connect4 application
        uses: actions/upload-artifact@v3
        with:
          name: Connect4
          path: |
              ./build/Connect4/Release/**
              !./build/Connect4/Release/*.xml
              !./build/Connect4/Release/*.pdb